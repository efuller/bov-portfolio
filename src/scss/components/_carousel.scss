//--------------------------------------------------------------
// CAROUSEL
//--------------------------------------------------------------
$numImages: 3;

.carousel {
	overflow: hidden;
	margin: 0 auto 20px;
	position: relative;
	max-width: 283px;
	width: 100%;

	@media screen and (min-width: $tablet) {
		max-width: 700px;
	}

	input[type=radio] {
		display: none;
	}

	> img {
		display: none;
	}

	img {
		transition: all 0.5s;
	}

	> label {
		background: rgba(255,255,255, 0.7);
		height: 30px;
		position: absolute;
		top: 47%;
		transform: translateY(-50%);
		width: 30px;
	}

	.carousel__images {
		border-radius: 5px;
		height: 200px;
		transition: transform 0.5s ease 0s;

		@media screen and (min-width: $tablet) {
			height: 475px;
		}

		img {
			border-radius: 5px;
			position:absolute;
			top: 0;
			transition: all .5s ease;
		}

		> img:nth-of-type(1) {
			transform: translateX(0%);
			opacity: 0.5;
		}

		> img:nth-of-type(2) {
			transform: translateX(100%);
			opacity: 0.5;
		}

		> img:nth-of-type(3) {
			transform: translateX(200%);
			opacity: 0.5;
		}
	}

	.carousel__dots {
		bottom: -6px;
		position: absolute;
		text-align: center;
		width: 100%;
		z-index: 5;
	}

	.carousel__dot {
		background-color: rgba(0, 0, 0, 0.5);
		border-radius: 50%;
		display: inline-block;
		height: 15px;
		list-style-type: none;
		margin: 0 5px;
		width: 15px;
	}

	@for $i from 1 through $numImages {
		.carousel__images > img:nth-of-type(#{$i}) {
			$i : $i - 1;
			transform: translateX(#{$i * 100%});
			opacity: 0.5;
		}
	}

	.ui_carousel-large > label {
		height: 30px;
		position: absolute;
		top: 52.5%;
		width: 30px;
	}

	@mixin createRules($num, $type){
		$foo : '';
		$start : 'input[type=radio]:nth-of-type(';
		$imagesRight : '):checked ~ label:nth-of-type(';
		$imagesMiddle : '):checked ~ .carousel__images';
		$dotsMiddle :'):checked ~ .carousel__dots .carousel__dot:nth-of-type(';
		$numBack : $num;
		$b : 1;
		@if $type == 'left' {
			@for $i from 1 through $num {
				$foo : $foo + $start + $i + $imagesRight + $numBack + '),
            ';
				$numBack : $i;
			}
		} @else if $type == 'right'{
			@for $i from 1 through $num {
				$b : $b + 1;
				$foo : $foo + $start + $i + $imagesRight + $b +'),
            ';
				@if $i == $num - 1  {
					$b : 0;
				}
			}
		} @else if $type == 'dots' {
			@for $i from 1 through $num {
				$foo : $foo + $start + $i + $dotsMiddle + $i +'),
            ';
			}
		}

		#{$foo} {
			@content;
		}
	}

	@include createRules($numImages,'left'){
		background: $color-white url('../images/chevron-left.svg') no-repeat center center;
		background-size: 20px 20px;
		border-radius: 2px;
		display: block;
		left: 10px;
		z-index: 5;

		&:hover {
			cursor: pointer;
		}
	}

	@include createRules($numImages, 'right'){
		background: $color-white url('../images/chevron-right.svg') no-repeat center center;
		background-size: 20px 20px;
		border-radius: 2px;
		display: block;
		right:10px;
		z-index: 4;

		&:hover {
			cursor: pointer;
		}
	}

	@include createRules($numImages, 'dots'){
		background-color: rgba(0, 0, 0, .75);
	}

	.input[type=radio]:nth-of-type(1):checked ~ .carousel__images {
		transform: translateX(0%);
	}

	@for $i from 1 through ($numImages - 1) {
		input[type=radio]:nth-of-type(#{$i+1}):checked ~ .carousel__images {
			transform: translateX(#{$i * -100%});
			top: 0;
		}
	}

	@mixin setOpacity($num){
		$foo : '';
		@for $i from 1 through $num {
			$foo : $foo +  'input[type=radio]:nth-of-type('+ $i+'):checked ~ .carousel__images img:nth-of-type('+$i+'),
        ';
		}

		#{$foo} {
			@content;
		}
	}

	@include setOpacity($numImages){
		opacity: 1;
	}
}

//--------------------------------------------------------------
// Project 6,8 Tweaks
//--------------------------------------------------------------
.project-6,
.project-8 {

	.carousel {

		.carousel__images {
			height: 210px;

			@media(min-width: $tablet) {
				height: 500px;
			}
		}
	}
}